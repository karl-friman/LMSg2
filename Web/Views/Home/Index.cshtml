@model IEnumerable<Core.Entities.Activity>
@using Microsoft.AspNetCore.Identity
@using Core.Entities;
@inject SignInManager<LMSUser> SignInManager
@inject UserManager<LMSUser> UserManager

@{
    ViewData["Title"] = "Index";
    //await Component.InvokeAsync("DashboardSchedule", new { userId = UserManager.GetUserId(User) });
}


@if (User.IsInRole("Admin"))
{
<div class="d-flex mt-3 ml-5">
    <h1>Hello Admin</h1>
    <a class="nav-link text-dark" asp-controller="Courses" asp-action="Index">Courses</a>

</div>
}
else
{
<div class="d-flex mt-3 ml-5">
    <div>
        @*@await Component.InvokeAsync("DashboardSchedule", new { userId = UserManager.GetUserId(User) })*@
        @*<partial name="StudentDashboardPartial" model="@await Component.InvokeAsync("DashboardSchedule", new { userId = UserManager.GetUserId(User) })"/>*@
        <vc:dashboard-schedule user-id="@UserManager.GetUserId(User)"></vc:dashboard-schedule>
    </div>
    <div class="pl-3">
        <vc:dashboard-modules user-id="@UserManager.GetUserId(User)"></vc:dashboard-modules>
    </div>
</div>

}
