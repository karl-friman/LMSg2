@model Core.Entities.API.Literature
@inject SignInManager<LMSUser> SignInManager
@inject UserManager<LMSUser> UserManager
@{
    ViewData["Title"] = "Details";
}

<div style="padding-left: 31px">

    <h1>Details</h1>

    <div>
        <h4>Literature</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-8">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.LevelName)
            </dt>
            <dt class="col-sm-4">
                @Html.DisplayFor(model => model.LevelName)
            </dt>
        </dl>
    </div>
    <div>
        @if (User.IsInRole("Admin"))
        {
            <span>
                <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                <a asp-action="Index">Back to List</a>
            </span>
        }
        else
        {
            <a asp-action="Index">Back to List</a>
        }
    </div>
</div>