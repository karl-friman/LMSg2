@using Core.ViewModels;
@model CourseViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Courses</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Courses)
            </th>
            <th>
                Modules
            </th>
            <th>
                Documents
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var course in Model.Courses)
        {
            string classContents = "btn btn-outline-primary";
            <tr>
                <td>
                    <div>
                        @if (Model.SelectedCourse is not null)
                        {
                            if (Model.SelectedCourse == course)
                            {
                                <div id="selected"></div>
                                classContents = "btn  btn-outline-warning";

                            }
                        }


                        @Html.ActionLink(linkText: course.Name, actionName: "Index", controllerName: "Courses",
                                         protocol: null, hostname: null, fragment: null,
                                         routeValues: new { selected = course.Id },
                                         htmlAttributes: new { @class = classContents })

                    </div>
                    <div><strong>@Html.DisplayNameFor(modelItem => course.Description):</strong> @Html.DisplayFor(modelItem => course.Description)</div>
                    <div><strong>@Html.DisplayNameFor(modelItem => course.StartDate):</strong> @Html.DisplayFor(modelItem => course.StartDate)</div>
                    <div><strong>@Html.DisplayNameFor(modelItem => course.EndDate):</strong> @Html.DisplayFor(modelItem => course.EndDate)</div>
                </td>
                <td>
                    @if (course.Modules != null)
                    {
                        @if (course.Modules.Count > 0)
                        {
                            <div>
                                Number of <strong>modules</strong>:@Html.DisplayFor(modelItem => course.Modules.Count)
                            </div>
                            <div>
                                @foreach (var module in course.Modules)
                                {
                                    if (module != null)
                                    {
                                        <span>
                                            @Html.ActionLink(linkText: module.Name, actionName: "Index", controllerName: "Modules",
                                                             protocol: null, hostname: null, fragment: null,
                                                             routeValues: new { selected = module.Id },
                                                             htmlAttributes: new { @class = "btn  btn-outline-primary" })
                                        </span>

                                        @if (module.Activities != null)
                                        {
                                            @if (module.Activities.Count > 0)
                                            {
                                                <div>
                                                    Number of <strong>Activities</strong>: @module.Activities.Count()
                                                </div>
                                                <div>
                                                    @foreach (var activity in module.Activities)
                                                    {
                                                        if (activity != null)
                                                        {
                                                            <div>
                                                                @Html.ActionLink(linkText: activity.Name, actionName: "Index", controllerName: "Activities",
                                                                                 protocol: null, hostname: null, fragment: null,
                                                                                 routeValues: new { selected = activity.Id },
                                                                                 htmlAttributes: new { @class = "btn btn-outline-info" })
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            }
                                        }

                                        <br />
                                    }
                                }
                            </div>
                        }
                    }
                </td>
                <td>
                    @foreach (var document in course.Documents)
                    {
                        <a class="btn btn-outline-primary" asp-action="Details" asp-controller="Documents" asp-route-id="@document.Id">
                            <div>@document.Name</div>
                        </a>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@course.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@course.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@course.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
