@model Core.ViewModels.DocumentToAssigmentViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Document</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data" asp-controller="Documents" asp-action="CreateAssignmentDoc">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AssignmentDoc" class="control-label"></label>
                <div class="custom-file">
                    <input asp-for="AssignmentDoc" class="form-control custom-file-input" />
                    <label class="custom-file-label">Select File</label>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </form>

        

          

   


















    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            });
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
