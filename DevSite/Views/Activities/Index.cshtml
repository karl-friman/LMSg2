@using Core.ViewModels.ActivitiesViewModel
@model IEnumerable<ActivityViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Activities</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th width="300">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Documents
            </th>
            <th>
                Module
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string classContents = "btn btn-outline-primary";
            <tr>
                <td width="300">
                    <div>
                        @*@if (Model.SelectedActivity is not null)
                        {
                            if (Model.SelectedActivity == activity)
                            {
                                <div id="selected"></div>
                                classContents = "btn  btn-outline-warning";

                            }
                        }*@


                        @Html.ActionLink(linkText: item.Name, actionName: "Index", controllerName: "Activities",
                                         protocol: null, hostname: null, fragment: null,
                                         routeValues: new { selected = item.Id },
                                         htmlAttributes: new { @class = classContents })

                    </div>
                    <div><strong>@Html.DisplayNameFor(modelItem => item.Description):</strong> @Html.DisplayFor(modelItem => item.Description)</div>
                    <div><strong>@Html.DisplayNameFor(modelItem => item.StartDate):</strong> @Html.DisplayFor(modelItem => item.StartDate)</div>
                    <div><strong>@Html.DisplayNameFor(modelItem => item.EndDate):</strong> @Html.DisplayFor(modelItem => item.EndDate)</div>
                </td>
                <td>
                    @if (item.Documents != null)
                    {
                        @foreach (var document in item.Documents)
                        {
                            <div>
                                <a class="btn btn-outline-success" asp-action="Details" asp-controller="Documents" asp-route-id="@document.Id">
                                    @document.Name
                                </a>
                            </div>
                        }
                    }
                    </td>
                <td>
                    <div>

                        @if (item.Module != null)
                        {
                            <span>
                                @Html.ActionLink(linkText: item.Module.Name, actionName: "Index", controllerName: "Modules",
                                                      protocol: null, hostname: null, fragment: null,
                                                      routeValues: new { selected = item.Module.Id },
                                                      htmlAttributes: new { @class = "btn  btn-outline-primary" })
                            </span>
                        }

                        <br />
                    </div>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
